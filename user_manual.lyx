#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass extreport
\use_default_options true
\begin_modules
logicalmkup
algorithm2e
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing onehalf
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref section
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\boxbgcolor #8d8d8d
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3cm
\rightmargin 4cm
\bottommargin 4cm
\secnumdepth 2
\tocdepth 2
\paragraph_separation skip
\defskip medskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 2
\paperpagestyle default
\bullet 2 0 10 -1
\bullet 3 0 24 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title

\series bold
\size giant
\noun on
cLASpy_T
\begin_inset Newline linebreak
\end_inset


\size huge
\noun default
User Manual
\end_layout

\begin_layout Date
Version 0.1 - 2021-01-20
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Section
About cLASpy_T
\end_layout

\begin_layout Standard

\shape smallcaps
\emph on
cLASpy_T
\shape default
\emph default
 means 
\emph on
Tools for classification of LAS files with python and machine learning algorithm
s
\emph default
 â†’
\begin_inset space ~
\end_inset

Classification LAS Python Tools.
 
\end_layout

\begin_layout Standard

\shape smallcaps
\emph on
cLASpy_T
\shape default
\emph default
 uses scikit-learn
\begin_inset Foot
status open

\begin_layout Plain Layout
https://scikit-learn.org/stable/
\end_layout

\end_inset

 machine learning algorithms to classify 3D point clouds, such as LiDAR
 or photogrammetric point clouds.
 Data must be provided in a LAS ou CSV file.
 Other formats should be supported later, such as GEOTIFF or PLY, and other
 machine learning libraries too, such as TensorFlow
\begin_inset Foot
status open

\begin_layout Plain Layout
https://www.tensorflow.org/
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
The project started in 2020 with Xavier PELLERIN LE BAS and the Remote Sensing
 Group
\begin_inset Foot
status open

\begin_layout Plain Layout
https://rsg.m2c.cnrs.fr/
\end_layout

\end_inset

 of the M2C laboratory
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "https://m2c.cnrs.fr/en/continental-and-coastal-morphodynamic-laboratory/"
literal "false"

\end_inset


\end_layout

\end_inset

.
 The 
\emph on
cLASpy_T
\emph default
 program is distributed under the CeCILL licence, version
\begin_inset space ~
\end_inset

2.1, see the licence_en.txt file.
\end_layout

\begin_layout Section
Purpose of cLASpy_T
\end_layout

\begin_layout Standard

\emph on
cLASpy_T
\emph default
 was developped to friendly use machine learning algorithms to classify
 or segment 3D point clouds.
\end_layout

\begin_layout Standard
Roughly, the program formats the input point clouds provided by LAS or CSV
 files, to pandas DataFrames and numpy arrays in order to be compatible
 with python machine learning algorythms, such as scikit-learn or TensorFlow.
 
\emph on
cLASpy_T
\emph default
 writes the output classified point clouds in the same format as the input
 data, 
\emph on
i.e.

\emph default
 LAS or CSV.
\end_layout

\begin_layout Chapter
Installation
\end_layout

\begin_layout Standard
This chapter describes how to get 
\emph on
cLASpy_T
\emph default
 source code and install all dependancies.
 
\end_layout

\begin_layout Section
Install Python 3
\end_layout

\begin_layout Standard

\shape smallcaps
\emph on
cLASpy_T
\shape default
\emph default
 is a Python 3 based program.
 It needs Python 3.7 64-bit interpreter installed or earlier versions.
 See the Download section of the Beginners Guide
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "https://wiki.python.org/moin/BeginnersGuide/Download"
literal "true"

\end_inset

 
\end_layout

\end_inset

 from the Python documentation.
 
\end_layout

\begin_layout Section
Install cLASpy_T on Windows
\end_layout

\begin_layout Standard
This section explains how to install 
\emph on
cLASpy_T
\emph default
 program on your Windows system.
 You will use the Command Prompt of Windows ('cmd.exe') to browse through
 directories, 'git' to get the source code, 'venv' to create a virtual environme
nt of python and 'pip' to install all dependencies for 
\emph on
cLASpy_T
\emph default
.
\end_layout

\begin_layout Subsection
Get cLASpy_T source code
\end_layout

\begin_layout Standard
First, open the Command Prompt 'cmd.exe'.
 You can easily open the Command Prompt by clicking Start and then typing
 'cmd' into the search box.
\end_layout

\begin_layout Standard
Move to the directory where you want to put the 
\emph on
cLASpy_T
\emph default
 source code.
 For example, 'Me' user moves to his 'Code' directory, then gets the 
\emph on
cLASpy_T
\emph default
 source code with the git command to clone 'cLASpy_T.git': 
\end_layout

\begin_layout LyX-Code
C:
\backslash
Users
\backslash
Me>cd Code
\end_layout

\begin_layout LyX-Code
C:
\backslash
Users
\backslash
Me
\backslash
Code>git clone https://github.com/TrickyPells/cLASpy_T.git
\end_layout

\begin_layout Standard
Once you clone source code, move to the 'cLASpy_T' directory:
\end_layout

\begin_layout LyX-Code
C:
\backslash
Users
\backslash
Me
\backslash
Code>cd cLASpy_T
\end_layout

\begin_layout Standard
If you do not know what 'git' is, you also can download 
\emph on
cLASpy_T
\emph default
 source code on the github page.
 Choose the branch you want to download, such as 'master' for example, click
 on 'Code', then 'Download ZIP'.
 Once downloaded, decompress the ZIP archive in the directory you want,
 for example, in 'Code' directory.
 The decompressed archive will give you a new folder, named 'cLASpy_T-master'
 in this case.
\end_layout

\begin_layout Standard
Once you download and decompress the source code, rename 'cLASpy_T-master'
 directory as 'cLASpy_T', and move into:
\end_layout

\begin_layout LyX-Code
C:
\backslash
Users
\backslash
Me
\backslash
Code>ren cLASpy_T-master cLASpy_T
\end_layout

\begin_layout LyX-Code
C:
\backslash
Users
\backslash
Me
\backslash
Code>cd cLASpy_T
\end_layout

\begin_layout Subsection
Create a Virtual Environment
\begin_inset CommandInset label
LatexCommand label
name "subsec:Create-a-Virtual"

\end_inset


\end_layout

\begin_layout Standard
Python uses many packages, depending of your usages.
 To prevent a dirty installation and package incompatibilities, it could
 be a great idea to use virtual environments.
 Here, you will create a specific virtual environment for 
\emph on
cLASpy_T
\emph default
 with 'venv'.
 
\end_layout

\begin_layout Standard
First, create a new directory call '.venv' and use 'venv' command from python
 to create a new virtual environment call 'claspy_venv':
\end_layout

\begin_layout LyX-Code
C:
\backslash
Users
\backslash
Me
\backslash
Code
\backslash
cLASpy_T> mkdir .venv
\end_layout

\begin_layout LyX-Code
C:
\backslash
Users
\backslash
Me
\backslash
Code
\backslash
cLASpy_T>python -m venv .venv
\backslash
claspy_venv
\end_layout

\begin_layout Standard
Now, you can use this new virtual environment with:
\end_layout

\begin_layout LyX-Code
C:
\backslash
Users
\backslash
Me
\backslash
Code
\backslash
cLASpy_T>.venv
\backslash
claspy_venv
\backslash
Scripts
\backslash
activate
\end_layout

\begin_layout Standard
Your Command Prompt should return something like this:
\end_layout

\begin_layout LyX-Code
(claspy_venv) C:
\backslash
Users
\backslash
Me
\backslash
Code
\backslash
cLASpy_T>
\end_layout

\begin_layout Standard
If you want to deactivate the virtual environment, just type:
\end_layout

\begin_layout LyX-Code
(claspy_venv) C:
\backslash
Users
\backslash
Me
\backslash
Code
\backslash
cLASpy_T>deactivate
\end_layout

\begin_layout Subsection
Install all dependencies
\end_layout

\begin_layout Standard
All required packages are listed in the 'requirements.txt' file.
 We will use 'pip' command to install all dependencies automatically.
\end_layout

\begin_layout Standard
Open a Command Prompt, go to the cLASpy_T directory and activate the already
 created virtual environment:
\end_layout

\begin_layout LyX-Code
C:
\backslash
Users
\backslash
Me
\backslash
Code
\backslash
cLASpy_T>.venv
\backslash
claspy_venv
\backslash
Scripts
\backslash
activate
\end_layout

\begin_layout Standard
First, check if 'pip' needs to be upgraded:
\end_layout

\begin_layout LyX-Code
(claspy_venv) C:
\backslash
Users
\backslash
Me
\backslash
Code
\backslash
cLASpy_T>python -m pip install --upgrade pip
\end_layout

\begin_layout Standard
Once done, you will install all dependencies:
\end_layout

\begin_layout LyX-Code
(claspy_venv) C:
\backslash
Users
\backslash
Me
\backslash
Code
\backslash
cLASpy_T>python -m pip install -r requirements.txt
\end_layout

\begin_layout Section
Install cLASpy_T on Linux
\end_layout

\begin_layout Standard
This section explains how to install 
\emph on
cLASpy_T
\emph default
 program on your Linux system.
 This guide use Debian/Ubuntu distribution as example.
 You will use the terminal to browse through directories and files, 'git'
 to get the source code, 'venv' to create a virtual environment of python
 and 'pip' to install all dependencies for 
\emph on
cLASpy_T
\emph default
.
\end_layout

\begin_layout Subsection
Get cLASpy_T source code
\end_layout

\begin_layout Standard
First, open a terminal and check for updates:
\end_layout

\begin_layout LyX-Code
me@MyComputer:~$ sudo apt update
\begin_inset Foot
status open

\begin_layout Plain Layout
You will need some permissions to upgrade your system.
 If you do not have these, ask your system administrator.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Apply upgrades if needed:
\end_layout

\begin_layout LyX-Code
me@MyComputer:~$ sudo apt upgrade -y
\end_layout

\begin_layout Standard
Move to the directory where to put the 
\emph on
cLASpy_T
\emph default
 source code.
 For example, 'me' user moves to his 'Code' directory, then gets the 
\emph on
cLASpy_T
\emph default
 source code with the 'git' command to clone 
\emph on
cLASpy_T
\emph default
: 
\end_layout

\begin_layout LyX-Code
me@MyComputer:~$ cd Code
\end_layout

\begin_layout LyX-Code
me@MyComputer:~/Code$ git clone https://github.com/TrickyPells/cLASpy_T.git
\end_layout

\begin_layout Standard
Once you clone source code, move to the 'cLASpy_T' directory:
\end_layout

\begin_layout LyX-Code
me@MyComputer:~/Code$ cd cLASpy_T
\end_layout

\begin_layout Standard
If you do not know what 'git' is, you also can download 
\emph on
cLASpy_T
\emph default
 source code on the github page.
 Choose the branch you want to download, such as 'master' for example, click
 on 'Code', then 'Download ZIP'.
 Once downloaded, decompress the ZIP archive in the directory you want,
 for example, in 'Code' directory.
 The decompressed archive will give you a new folder, named 'cLASpy_T-master'
 in this case.
\end_layout

\begin_layout Standard
Once you download and decompress the source code, rename 'cLASpy_T-master'
 directory as 'cLASpy_T', and move into:
\end_layout

\begin_layout LyX-Code
me@MyComputer:~/Code$ mv cLASpy_T-master cLASpy_T
\end_layout

\begin_layout LyX-Code
me@MyComputer:~/Code$ cd cLASpy_T
\end_layout

\begin_layout Subsection
Create a Virtual Environment
\end_layout

\begin_layout Standard
Python uses many packages, depending of your usages.
 To prevent a dirty installation and package incompatibilities, it's could
 be a great idea to use virtual environments.
 Here, you will create a specific virtual environment for 
\emph on
cLASpy_T
\emph default
 with 'venv'.
 
\end_layout

\begin_layout Standard
First, install 'pip' to manage and install all needed packages and 'venv'
 to create virtual environments:
\end_layout

\begin_layout LyX-Code
me@MyComputer:~/Code/cLASpy_T$ sudo apt install python3-pip python3-venv
\begin_inset Foot
status open

\begin_layout Plain Layout
You will need some permissions to install pip and venv.
 If you do not have these, ask your system administrator.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Create a new directory '.venv', then use venv command from python to create
 a new virtual environment call 'claspy_venv':
\end_layout

\begin_layout LyX-Code
me@MyComputer:~/Code/cLASpy_T$ mkdir .venv
\end_layout

\begin_layout LyX-Code
me@MyComputer:~/Code/cLASpy_T$ python3 -m venv .venv/claspy_venv
\end_layout

\begin_layout Standard
Now, you can use this new virtual environment with:
\end_layout

\begin_layout LyX-Code
me@MyComputer:~/Code/cLASpy_T$ source .venv/claspy_venv/bin/activate
\end_layout

\begin_layout Standard
Your terminal must return something like this:
\end_layout

\begin_layout LyX-Code
(claspy_venv) me@MyComputer:~/Code/cLASpy_T$
\end_layout

\begin_layout Standard
If you want to deactivate the virtual environment, just type:
\end_layout

\begin_layout LyX-Code
(claspy_venv) me@MyComputer:~/Code/cLASpy_T$ deactivate
\end_layout

\begin_layout Subsection
Install all dependencies
\end_layout

\begin_layout Standard
All required packages are listed in the 'requirements.txt' file.
 We will use 'pip' command to install all dependencies automatically.
\end_layout

\begin_layout Standard
Open a terminal, go to the cLASpy_T directory and activate the already created
 virtual environment:
\end_layout

\begin_layout LyX-Code
me@MyComputer:~/Code/cLASpy_T$ source .venv/claspy_venv/bin/activate
\end_layout

\begin_layout Standard
First, check if 'pip' needs to be upgraded:
\end_layout

\begin_layout LyX-Code
(claspy_venv) me@MyComputer:~/Code/cLASpy_T$ python3 -m pip install --upgrade
 pip
\end_layout

\begin_layout Standard
Once done, install all dependencies:
\end_layout

\begin_layout LyX-Code
(claspy_venv) me@MyComputer:~/Code/cLASpy_T$ python3 -m pip install -r requireme
nts.txt
\end_layout

\begin_layout Section
List of dependencies
\end_layout

\begin_layout Standard

\emph on
package (minimal version)
\end_layout

\begin_layout Itemize
colorclass (2.2.0)
\end_layout

\begin_layout Itemize
cycler (0.10.0)
\end_layout

\begin_layout Itemize
joblib (1.0.1)
\end_layout

\begin_layout Itemize
kiwisolver (1.3.1)
\end_layout

\begin_layout Itemize
laspy (1.7.0)
\end_layout

\begin_layout Itemize
matplotlib (3.3.4)
\end_layout

\begin_layout Itemize
numpy (1.20.1)
\end_layout

\begin_layout Itemize
pandas (1.2.3)
\end_layout

\begin_layout Itemize
Pillow (8.1.1)
\end_layout

\begin_layout Itemize
pyparsing (2.4.7)
\end_layout

\begin_layout Itemize
PyQt5 (5.15.3)
\end_layout

\begin_layout Itemize
PyQt5-Qt (5.15.2)
\end_layout

\begin_layout Itemize
PyQt5-sip (12.8.1)
\end_layout

\begin_layout Itemize
python-dateutil (2.8.1)
\end_layout

\begin_layout Itemize
pytz (2021.1)
\end_layout

\begin_layout Itemize
PyYAML (5.4.1)
\end_layout

\begin_layout Itemize
scikit-learn (0.24.1)
\end_layout

\begin_layout Itemize
scipy (1.6.1)
\end_layout

\begin_layout Itemize
six (1.15.0)
\end_layout

\begin_layout Itemize
terminaltables (3.1.0)
\end_layout

\begin_layout Itemize
threadpoolctl (2.1.0)
\end_layout

\begin_layout Chapter
Usage
\end_layout

\begin_layout Standard
This chapter describes how to use 
\emph on
cLASpy_T
\emph default
 as command line and GUI.
\end_layout

\begin_layout Section
on Windows
\end_layout

\begin_layout Standard
This section explains how to use 
\emph on
cLASpy_T
\emph default
 as command line on Windows, and the Graphical User Interface of 
\emph on
cLASpy_T
\emph default
.
 This part assumes that you moved to the 'cLASpy_T' directory and the virtual
 environment is activated (
\begin_inset CommandInset ref
LatexCommand formatted
reference "subsec:Create-a-Virtual"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Subsection
cLASpy_T command line usages
\end_layout

\begin_layout Subsubsection
Use 
\emph on
train
\emph default
 command
\end_layout

\begin_layout Subsubsection
Use 
\emph on
predict
\emph default
 command
\end_layout

\begin_layout Subsubsection
Use 
\emph on
segment
\emph default
 command
\end_layout

\begin_layout Subsection
GUI of cLASpy_T
\end_layout

\begin_layout Section
on Linux
\end_layout

\end_body
\end_document
